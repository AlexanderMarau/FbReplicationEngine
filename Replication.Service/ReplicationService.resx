<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="pumNotifyIcon.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 56</value>
  </metadata>
  <metadata name="notifyRunAsApp.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 95</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="notifyRunAsApp.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAYAEBAQAAEABAAoAQAAZgAAABAQAAABAAgAaAUAAI4BAAAQEAAAAQAgAGgEAAD2BgAAICAQAAEA
        BADoAgAAXgsAACAgAAABAAgAqAgAAEYOAAAgIAAAAQAgAKgQAADuFgAAKAAAABAAAAAgAAAAAQAEAAAA
        AACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAIAAAACAgACAAAAAgACAAICAAACAgIAAwMDAAAAA
        /wAA/wAAAP//AP8AAAD/AP8A//8AAP///wAP///////wAPd4d3eHd/AA94h4h4d38AD3d3h3j3fwAA//
        //h3d/AAAA93d3d38AAAD3d3d3fwAAAPd3d3d/AAAA93d3d38AAAD3d3d3fwAAAPd///d/AAAA93d3d3
        8AAAD3f//3fwAAAPd3d3d/AAAA93d3d38AAAD//////wAIAHAAAABwAAAAcAAAAHAACABwAA4AcAAOAH
        AADgBwAA4AcAAOAHAADgBwAA4AcAAOAHAADgBwAA4AcAAOAHAAAoAAAAEAAAACAAAAABAAgAAAAAAAAB
        AAAAAAAAAAAAAAABAAAAAQAAAAAAAEJCQgBNTU0AZGRkAJycnACnp6cAs7OzAL6+vgDJyckA4ODgAOvr
        6wDx7/AA9vb2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA////AAAMDAwMDAwMDAwMDAwAAAAMAwIGAgEBAwYBAQEMAAAACQEGCAQG
        BQEIAQEBDAAAAAwDAQECBgIDBgsBAQwAAAAADAwMDAwKBwIBAQEMAAAAAAAADAEBAQEBAQEBDAAAAAAA
        AAwBAQEBAQEBAQwAAAAAAAAMAQEBAQEBAQEMAAAAAAAADAEBAQEBAQEBDAAAAAAAAAwBAQEBAQEBAQwA
        AAAAAAAMAQELCwsLAQEMAAAAAAAADAEBAQEBAQEBDAAAAAAAAAwBAQsLCwsBAQwAAAAAAAAMAQEBAQEB
        AQEMAAAAAAAADAEBAQEBAQEBDAAAAAAAAAwMDAwMDAwMDAwAAACABwAAAAcAAAAHAAAABwAAgAcAAOAH
        AADgBwAA4AcAAOAHAADgBwAA4AcAAOAHAADgBwAA4AcAAOAHAADgBwAAKAAAABAAAAAgAAAAAQAgAAAA
        AABABAAAAAAAAAAAAAAAAAAAAAAAAPb29mD29vb/9vb2//b29v/29vb/9vb2//b29v/29vb/9vb2//b2
        9v/29vb/9vb2//b29v8AAAAAAAAAAAAAAAD29vbvZGRk/01NTf+zs7P/TU1N/0JCQv9CQkL/ZGRk/7Oz
        s/9CQkL/QkJC/0JCQv/29vb/AAAAAAAAAAAAAAAA4ODg/0JCQv+zs7P/ycnJ/5ycnP+zs7P/p6en/0JC
        Qv/Jycn/QkJC/0JCQv9CQkL/9vb2/wAAAAAAAAAAAAAAAPb29u9kZGT/QkJC/0JCQv9NTU3/s7Oz/01N
        Tf9kZGT/s7Oz//Hv8P9CQkL/QkJC//b29v8AAAAAAAAAAAAAAAD29vZg9vb2//b29v/29vb/9vb2//b2
        9v/r6+v/vr6+/01NTf9CQkL/QkJC/0JCQv/29vb/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9vb2/0JC
        Qv9CQkL/QkJC/0JCQv9CQkL/QkJC/0JCQv9CQkL/9vb2/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPb2
        9v9CQkL/QkJC/0JCQv9CQkL/QkJC/0JCQv9CQkL/QkJC//b29v8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAD29vb/QkJC/0JCQv9CQkL/QkJC/0JCQv9CQkL/QkJC/0JCQv/29vb/AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA9vb2/0JCQv9CQkL/QkJC/0JCQv9CQkL/QkJC/0JCQv9CQkL/9vb2/wAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAPb29v9CQkL/QkJC/0JCQv9CQkL/QkJC/0JCQv9CQkL/QkJC//b29v8AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAD29vb/QkJC/0JCQv/x7/D/8e/w//Hv8P/x7/D/QkJC/0JCQv/29vb/AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA9vb2/0JCQv9CQkL/QkJC/0JCQv9CQkL/QkJC/0JCQv9CQkL/9vb2/wAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAPb29v9CQkL/QkJC//Hv8P/x7/D/8e/w//Hv8P9CQkL/QkJC//b2
        9v8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD29vb/QkJC/0JCQv9CQkL/QkJC/0JCQv9CQkL/QkJC/0JC
        Qv/29vb/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9vb2/0JCQv9CQkL/QkJC/0JCQv9CQkL/QkJC/0JC
        Qv9CQkL/9vb2/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPb29v/29vb/9vb2//b29v/29vb/9vb2//b2
        9v/29vb/9vb2//b29v8AAAAAAAAAAAAAAAAABwAAAAcAAAAHAAAABwAAAAcAAOAHAADgBwAA4AcAAOAH
        AADgBwAA4AcAAOAHAADgBwAA4AcAAOAHAADgBwAAKAAAACAAAABAAAAAAQAEAAAAAAAAAgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAIAAAIAAAACAgACAAAAAgACAAICAAACAgIAAwMDAAAAA/wAA/wAAAP//AP8A
        AAD/AP8A//8AAP///wAA/////////////////wAAD/////////////////8AAP+Hd3d3d3d493d3d3f/
        AAD/d3d3d3d3d/h3d3d3/wAA/3d/d3+I93f4d3d3d/8AAP93f4j3d/d3+Hf/93f/AAD/d3d3d3d3d/h3
        //d3/wAA/4d3d3d3d3j3d3d3d/8AAA//////////d3d3d3f/AAAA///////4h3d3d3d3/wAAAAAAD/d3
        d3d3d3d3d/8AAAAAAA/3d3d3d3d3d3f/AAAAAAAP93d3d3d3d3d3/wAAAAAAD/d3d3d3d3d3d/8AAAAA
        AA/3d3d3d3d3d3f/AAAAAAAP93d3d3d3d3d3/wAAAAAAD/d3d3d3d3d3d/8AAAAAAA/3d3d3d3d3d3f/
        AAAAAAAP93d3d3d3d3d3/wAAAAAAD/d3d3d3d3d3d/8AAAAAAA/3d///////93f/AAAAAAAP93f/////
        //d3/wAAAAAAD/d3d3d3d3d3d/8AAAAAAA/3d3d3d3d3d3f/AAAAAAAP93d3d3d3d3d3/wAAAAAAD/d3
        ///////3d/8AAAAAAA/3d///////93f/AAAAAAAP93d3d3d3d3d3/wAAAAAAD/d3d3d3d3d3d/8AAAAA
        AA/3d3d3d3d3d3f/AAAAAAAP/////////////wAAAAAAD/////////////8AAMAAAA+AAAAPAAAADwAA
        AA8AAAAPAAAADwAAAA8AAAAPgAAAD8AAAA/+AAAP/gAAD/4AAA/+AAAP/gAAD/4AAA/+AAAP/gAAD/4A
        AA/+AAAP/gAAD/4AAA/+AAAP/gAAD/4AAA/+AAAP/gAAD/4AAA/+AAAP/gAAD/4AAA/+AAAPKAAAACAA
        AABAAAAAAQAIAAAAAAAABAAAAAAAAAAAAAAAAQAAAAEAAAAAAABCQkIATU1NAFlZWQBkZGQAhoaGAJyc
        nACnp6cAs7OzAMnJyQDU1NQA6+vrAPHv8AD29vYA+fn5AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP///wAAAA4NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0N
        DQ0NDQ0NAAAAAAANDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0AAAAADg0KBAEBAwMBAQEBAQEECg0E
        AQEBAQEBAQENDQAAAAANDQQBAQQEAQEBAQEBAQEEDQgBAQEBAQEBAQ0NAAAAAA0LAQEGCwIBBQ0HCQsG
        AQENCQEBAQEBAQEBDQ0AAAAADQsBAQYLCQcNBQECCwYBAQ0JAQEMDAwBAQENDQAAAAANDQQBAQEBAQEB
        AQQEAQEEDQgBAQwMDAEBAQ0NAAAAAA4NCgQBAQEBAQEDAwEBBAoNBAEBAQEBAQEBDQ0AAAAAAA0NDQ0N
        DQ0NDQ0NDQ0NDQUBAQEBAQEBAQENDQAAAAAAAA4NDQ0NDQ0NDQ0LCQgDAQEBAQEBAQEBAQ0NAAAAAAAA
        AAAAAAANDQEBAQEBAQEBAQEBAQEBAQEBDQ0AAAAAAAAAAAAAAA0NAQEBAQEBAQEBAQEBAQEBAQENDQAA
        AAAAAAAAAAAADQ0BAQEBAQEBAQEBAQEBAQEBAQ0NAAAAAAAAAAAAAAANDQEBAQEBAQEBAQEBAQEBAQEB
        DQ0AAAAAAAAAAAAAAA0NAQEBAQEBAQEBAQEBAQEBAQENDQAAAAAAAAAAAAAADQ0BAQEBAQEBAQEBAQEB
        AQEBAQ0NAAAAAAAAAAAAAAANDQEBAQEBAQEBAQEBAQEBAQEBDQ0AAAAAAAAAAAAAAA0NAQEBAQEBAQEB
        AQEBAQEBAQENDQAAAAAAAAAAAAAADQ0BAQEBAQEBAQEBAQEBAQEBAQ0NAAAAAAAAAAAAAAANDQEBAQEB
        AQEBAQEBAQEBAQEBDQ0AAAAAAAAAAAAAAA0NAQEBDAwMDAwMDAwMDAwBAQENDQAAAAAAAAAAAAAADQ0B
        AQEMDAwMDAwMDAwMDAEBAQ0NAAAAAAAAAAAAAAANDQEBAQEBAQEBAQEBAQEBAQEBDQ0AAAAAAAAAAAAA
        AA0NAQEBAQEBAQEBAQEBAQEBAQENDQAAAAAAAAAAAAAADQ0BAQEBAQEBAQEBAQEBAQEBAQ0NAAAAAAAA
        AAAAAAANDQEBAQwMDAwMDAwMDAwMAQEBDQ0AAAAAAAAAAAAAAA0NAQEBDAwMDAwMDAwMDAwBAQENDQAA
        AAAAAAAAAAAADQ0BAQEBAQEBAQEBAQEBAQEBAQ0NAAAAAAAAAAAAAAANDQEBAQEBAQEBAQEBAQEBAQEB
        DQ0AAAAAAAAAAAAAAA0NAQEBAQEBAQEBAQEBAQEBAQENDQAAAAAAAAAAAAAADQ0NDQ0NDQ0NDQ0NDQ0N
        DQ0NDQ0NAAAAAAAAAAAAAAANDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0AAAAAwAAAD4AAAA8AAAAPAAAADwAA
        AA8AAAAPAAAADwAAAA+AAAAPwAAAD/4AAA/+AAAP/gAAD/4AAA/+AAAP/gAAD/4AAA/+AAAP/gAAD/4A
        AA/+AAAP/gAAD/4AAA/+AAAP/gAAD/4AAA/+AAAP/gAAD/4AAA/+AAAP/gAAD/4AAA8oAAAAIAAAAEAA
        AAABACAAAAAAAIAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPb29hD29vaA9vb27/b29v/29vb/9vb2//b2
        9v/29vb/9vb2//b29v/29vb/9vb2//b29v/29vb/9vb2//b29v/29vb/9vb2//b29v/29vb/9vb2//b2
        9v/29vb/9vb2//b29v/29vb/9vb2/wAAAAAAAAAAAAAAAAAAAAD29vYQ9vb2z/b29v/29vb/9vb2//b2
        9v/29vb/9vb2//b29v/29vb/9vb2//b29v/29vb/9vb2//b29v/29vb/9vb2//b29v/29vb/9vb2//b2
        9v/29vb/9vb2//b29v/29vb/9vb2//b29v/29vb/AAAAAAAAAAAAAAAAAAAAAPb29o/29vb/1NTU/2Rk
        ZP9CQkL/QkJC/1lZWf9ZWVn/QkJC/0JCQv9CQkL/QkJC/0JCQv9CQkL/ZGRk/9TU1P/29vb/ZGRk/0JC
        Qv9CQkL/QkJC/0JCQv9CQkL/QkJC/0JCQv9CQkL/9vb2//b29v8AAAAAAAAAAAAAAAAAAAAA9vb27/b2
        9v9kZGT/QkJC/0JCQv9kZGT/ZGRk/0JCQv9CQkL/QkJC/0JCQv9CQkL/QkJC/0JCQv9CQkL/ZGRk//b2
        9v+zs7P/QkJC/0JCQv9CQkL/QkJC/0JCQv9CQkL/QkJC/0JCQv/29vb/9vb2/wAAAAAAAAAAAAAAAAAA
        AAD29vb/6+vr/0JCQv9CQkL/nJyc/+vr6/9NTU3/QkJC/4aGhv/29vb/p6en/8nJyf/r6+v/nJyc/0JC
        Qv9CQkL/9vb2/8nJyf9CQkL/QkJC/0JCQv9CQkL/QkJC/0JCQv9CQkL/QkJC//b29v/29vb/AAAAAAAA
        AAAAAAAAAAAAAPb29v/r6+v/QkJC/0JCQv+cnJz/6+vr/8nJyf+np6f/9vb2/4aGhv9CQkL/TU1N/+vr
        6/+cnJz/QkJC/0JCQv/29vb/ycnJ/0JCQv9CQkL/8e/w//Hv8P/x7/D/QkJC/0JCQv9CQkL/9vb2//b2
        9v8AAAAAAAAAAAAAAAAAAAAA9vb27/b29v9kZGT/QkJC/0JCQv9CQkL/QkJC/0JCQv9CQkL/QkJC/0JC
        Qv9kZGT/ZGRk/0JCQv9CQkL/ZGRk//b29v+zs7P/QkJC/0JCQv/x7/D/8e/w//Hv8P9CQkL/QkJC/0JC
        Qv/29vb/9vb2/wAAAAAAAAAAAAAAAAAAAAD29vaP9vb2/9TU1P9kZGT/QkJC/0JCQv9CQkL/QkJC/0JC
        Qv9CQkL/WVlZ/1lZWf9CQkL/QkJC/2RkZP/U1NT/9vb2/2RkZP9CQkL/QkJC/0JCQv9CQkL/QkJC/0JC
        Qv9CQkL/QkJC//b29v/29vb/AAAAAAAAAAAAAAAAAAAAAPb29hD29vbP9vb2//b29v/29vb/9vb2//b2
        9v/29vb/9vb2//b29v/29vb/9vb2//b29v/29vb/9vb2//b29v+Ghob/QkJC/0JCQv9CQkL/QkJC/0JC
        Qv9CQkL/QkJC/0JCQv9CQkL/9vb2//b29v8AAAAAAAAAAAAAAAAAAAAAAAAAAPb29hD29vaA9vb27/b2
        9v/29vb/9vb2//b29v/29vb/9vb2//b29v/29vb/6+vr/8nJyf+zs7P/WVlZ/0JCQv9CQkL/QkJC/0JC
        Qv9CQkL/QkJC/0JCQv9CQkL/QkJC/0JCQv/29vb/9vb2/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA9vb2//b29v9CQkL/QkJC/0JCQv9CQkL/QkJC/0JCQv9CQkL/QkJC/0JC
        Qv9CQkL/QkJC/0JCQv9CQkL/QkJC/0JCQv9CQkL/QkJC//b29v/29vb/AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD29vb/9vb2/0JCQv9CQkL/QkJC/0JCQv9CQkL/QkJC/0JC
        Qv9CQkL/QkJC/0JCQv9CQkL/QkJC/0JCQv9CQkL/QkJC/0JCQv9CQkL/9vb2//b29v8AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPb29v/29vb/QkJC/0JCQv9CQkL/QkJC/0JC
        Qv9CQkL/QkJC/0JCQv9CQkL/QkJC/0JCQv9CQkL/QkJC/0JCQv9CQkL/QkJC/0JCQv/29vb/9vb2/wAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9vb2//b29v9CQkL/QkJC/0JC
        Qv9CQkL/QkJC/0JCQv9CQkL/QkJC/0JCQv9CQkL/QkJC/0JCQv9CQkL/QkJC/0JCQv9CQkL/QkJC//b2
        9v/29vb/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD29vb/9vb2/0JC
        Qv9CQkL/QkJC/0JCQv9CQkL/QkJC/0JCQv9CQkL/QkJC/0JCQv9CQkL/QkJC/0JCQv9CQkL/QkJC/0JC
        Qv9CQkL/9vb2//b29v8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPb2
        9v/29vb/QkJC/0JCQv9CQkL/QkJC/0JCQv9CQkL/QkJC/0JCQv9CQkL/QkJC/0JCQv9CQkL/QkJC/0JC
        Qv9CQkL/QkJC/0JCQv/29vb/9vb2/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA9vb2//b29v9CQkL/QkJC/0JCQv9CQkL/QkJC/0JCQv9CQkL/QkJC/0JCQv9CQkL/QkJC/0JC
        Qv9CQkL/QkJC/0JCQv9CQkL/QkJC//b29v/29vb/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAD29vb/9vb2/0JCQv9CQkL/QkJC/0JCQv9CQkL/QkJC/0JCQv9CQkL/QkJC/0JC
        Qv9CQkL/QkJC/0JCQv9CQkL/QkJC/0JCQv9CQkL/9vb2//b29v8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAPb29v/29vb/QkJC/0JCQv9CQkL/QkJC/0JCQv9CQkL/QkJC/0JC
        Qv9CQkL/QkJC/0JCQv9CQkL/QkJC/0JCQv9CQkL/QkJC/0JCQv/29vb/9vb2/wAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9vb2//b29v9CQkL/QkJC/0JCQv9CQkL/QkJC/0JC
        Qv9CQkL/QkJC/0JCQv9CQkL/QkJC/0JCQv9CQkL/QkJC/0JCQv9CQkL/QkJC//b29v/29vb/AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD29vb/9vb2/0JCQv9CQkL/QkJC//Hv
        8P/x7/D/8e/w//Hv8P/x7/D/8e/w//Hv8P/x7/D/8e/w//Hv8P/x7/D/QkJC/0JCQv9CQkL/9vb2//b2
        9v8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPb29v/29vb/QkJC/0JC
        Qv9CQkL/8e/w//Hv8P/x7/D/8e/w//Hv8P/x7/D/8e/w//Hv8P/x7/D/8e/w//Hv8P9CQkL/QkJC/0JC
        Qv/29vb/9vb2/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9vb2//b2
        9v9CQkL/QkJC/0JCQv9CQkL/QkJC/0JCQv9CQkL/QkJC/0JCQv9CQkL/QkJC/0JCQv9CQkL/QkJC/0JC
        Qv9CQkL/QkJC//b29v/29vb/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAD29vb/9vb2/0JCQv9CQkL/QkJC/0JCQv9CQkL/QkJC/0JCQv9CQkL/QkJC/0JCQv9CQkL/QkJC/0JC
        Qv9CQkL/QkJC/0JCQv9CQkL/9vb2//b29v8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAPb29v/29vb/QkJC/0JCQv9CQkL/QkJC/0JCQv9CQkL/QkJC/0JCQv9CQkL/QkJC/0JC
        Qv9CQkL/QkJC/0JCQv9CQkL/QkJC/0JCQv/29vb/9vb2/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA9vb2//b29v9CQkL/QkJC/0JCQv/x7/D/8e/w//Hv8P/x7/D/8e/w//Hv
        8P/x7/D/8e/w//Hv8P/x7/D/8e/w/0JCQv9CQkL/QkJC//b29v/29vb/AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD29vb/9vb2/0JCQv9CQkL/QkJC//Hv8P/x7/D/8e/w//Hv
        8P/x7/D/8e/w//Hv8P/x7/D/8e/w//Hv8P/x7/D/QkJC/0JCQv9CQkL/9vb2//b29v8AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPb29v/29vb/QkJC/0JCQv9CQkL/QkJC/0JC
        Qv9CQkL/QkJC/0JCQv9CQkL/QkJC/0JCQv9CQkL/QkJC/0JCQv9CQkL/QkJC/0JCQv/29vb/9vb2/wAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9vb2//b29v9CQkL/QkJC/0JC
        Qv9CQkL/QkJC/0JCQv9CQkL/QkJC/0JCQv9CQkL/QkJC/0JCQv9CQkL/QkJC/0JCQv9CQkL/QkJC//b2
        9v/29vb/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD29vb/9vb2/0JC
        Qv9CQkL/QkJC/0JCQv9CQkL/QkJC/0JCQv9CQkL/QkJC/0JCQv9CQkL/QkJC/0JCQv9CQkL/QkJC/0JC
        Qv9CQkL/9vb2//b29v8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPb2
        9v/29vb/9vb2//b29v/29vb/9vb2//b29v/29vb/9vb2//b29v/29vb/9vb2//b29v/29vb/9vb2//b2
        9v/29vb/9vb2//b29v/29vb/9vb2/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA9vb2//b29v/29vb/9vb2//b29v/29vb/9vb2//b29v/29vb/9vb2//b29v/29vb/9vb2//b2
        9v/29vb/9vb2//b29v/29vb/9vb2//b29v/29vb/AAAAAAAAAAAAAAAAAAAAAIAAAA8AAAAPAAAADwAA
        AA8AAAAPAAAADwAAAA8AAAAPAAAAD4AAAA/+AAAP/gAAD/4AAA/+AAAP/gAAD/4AAA/+AAAP/gAAD/4A
        AA/+AAAP/gAAD/4AAA/+AAAP/gAAD/4AAA/+AAAP/gAAD/4AAA/+AAAP/gAAD/4AAA/+AAAP
</value>
  </data>
  <metadata name="versionMaster401.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 134</value>
  </metadata>
  <data name="versionMaster401.StringBlock" xml:space="preserve">
    <value>SET TERM ^ ;
ALTER PROCEDURE REPLICATE$OPERATIONLOG_INSERT (
    IPTABLE_NAME Varchar(31),
    IPOPERATION Varchar(6),
    IPPKEY1 Varchar(31),
    IPPKEY1_VALUE Varchar(24),
    IPPKEY2 Varchar(31),
    IPPKEY2_VALUE Varchar(24),
    IPPKEY3 Varchar(31),
    IPPKEY3_VALUE Varchar(24) )
RETURNS (
    OPNEWID Bigint )
AS
BEGIN 
  opNEWID = GEN_ID(REPLICATE$OPERATIONLOG_ID, 1);
  INSERT INTO REPLICATE$OPERATIONLOG (ID, DATETIME, TABLE_NAME, OPERATION, PKEY1, PKEY1_VALUE, PKEY2, PKEY2_VALUE, PKEY3, PKEY3_VALUE, REPLICATED, CLIENT_ADDRESS, USER_NAME, USER_ROLE)
  VALUES (:opNEWID, CURRENT_TIMESTAMP, :ipTABLE_NAME, :ipOPERATION, :ipPKEY1, :ipPKEY1_VALUE, :ipPKEY2, :ipPKEY2_VALUE, :ipPKEY3, :ipPKEY3_VALUE, COALESCE(rdb$get_context('USER_TRANSACTION', 'CLIENT_ID'), 0), rdb$get_context('SYSTEM', 'CLIENT_ADDRESS'), USER, CURRENT_ROLE); 
  SUSPEND;
END^
SET TERM ; ^
</value>
  </data>
  <metadata name="versionMaster402.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 173</value>
  </metadata>
  <data name="versionMaster402.StringBlock" xml:space="preserve">
    <value>SET TERM ^ ;
ALTER PROCEDURE REPLICATE$OPERATIONLOG_INSERT (
    IPTABLE_NAME Varchar(31),
    IPOPERATION Varchar(6),
    IPPKEY1 Varchar(31),
    IPPKEY1_VALUE Varchar(24),
    IPPKEY2 Varchar(31),
    IPPKEY2_VALUE Varchar(24),
    IPPKEY3 Varchar(31),
    IPPKEY3_VALUE Varchar(24) )
RETURNS (
    OPNEWID Bigint )
AS
BEGIN 
  opNEWID = GEN_ID(REPLICATE$OPERATIONLOG_ID, 1);
  INSERT INTO REPLICATE$OPERATIONLOG (ID, DATETIME, TABLE_NAME, OPERATION, PKEY1, PKEY1_VALUE, PKEY2, PKEY2_VALUE, PKEY3, PKEY3_VALUE, REPLICATED, CLIENT_ADDRESS, USER_NAME, USER_ROLE)
  VALUES (:opNEWID, CURRENT_TIMESTAMP, :ipTABLE_NAME, :ipOPERATION, :ipPKEY1, :ipPKEY1_VALUE, :ipPKEY2, :ipPKEY2_VALUE, :ipPKEY3, :ipPKEY3_VALUE, COALESCE(rdb$get_context('USER_TRANSACTION', 'CLIENT_ID'), 0), rdb$get_context('SYSTEM', 'CLIENT_ADDRESS'), USER, CURRENT_ROLE); 
  SUSPEND;
END^
SET TERM ; ^
</value>
  </data>
  <metadata name="versionMaster404.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>11, 206</value>
  </metadata>
  <data name="versionMaster404.StringBlock" xml:space="preserve">
    <value>CREATE GENERATOR REPLICATE$MAXIMUM_ID;

GRANT USAGE ON GENERATOR REPLICATE$MAXIMUM_ID TO USER PUBLIC;


SET TERM ^ ;
ALTER PROCEDURE REPLICATION$REMOTECOUNT (
    IPCURRENTID Bigint )
RETURNS (
    OPUPDATES Bigint )
AS
BEGIN
    SELECT COUNT(*)
    FROM REPLICATE$OPERATIONLOG ol
    WHERE ol.ID &gt; :ipCURRENTID
        AND ol.ID IN (SELECT cl.OPERATIONLOG_ID FROM REPLICATE$COLUMNLOG cl WHERE cl.OPERATIONLOG_ID &gt; :ipCURRENTID) 
    INTO :opUPDATES;
    SUSPEND;
END^
SET TERM ; ^


SET TERM ^ ;
ALTER PROCEDURE REPLICATE$REPLICATECHANGES (
    IPFROMID Bigint,
    IPTOID Bigint )
RETURNS (
    OPOPERATION_ID Bigint,
    OPTABLE Varchar(31),
    OPPRIMARY_KEY Varchar(31),
    OPPRIMARY_KEY_VALUE Varchar(24),
    OPSQL Blob sub_type 1 )
AS
DECLARE VARIABLE VOperationType VARCHAR(6);
BEGIN
  
  FOR
    SELECT ol.ID, ol.OPERATION, ol.TABLE_NAME, ol.PKEY1, OL.PKEY1_VALUE, RS.REQUIRED_SQL
    FROM REPLICATE$OPERATIONLOG ol
      LEFT JOIN REPLICATE$REQUIRED_SQL rs ON (rs.ID = OL.ID)
    WHERE ol.ID &gt; :IPFROMID AND  ol.ID &lt;= :IPTOID    
    ORDER BY ol.ID
    INTO :OPOPERATION_ID, :vOperationType, :opTable, :opPRIMARY_KEY, :opPRIMARY_KEY_VALUE, :opSQL
  DO
  BEGIN
    IF (opSQL IS NULL) THEN
    BEGIN
        IF (vOperationType = 'UPDATE') THEN
        BEGIN
          EXECUTE PROCEDURE REPLICATE$REPLICATEUPDATE(OPOPERATION_ID) RETURNING_VALUES :opSQL;
        END ELSE IF (vOperationType = 'DELETE') THEN
        BEGIN
          EXECUTE PROCEDURE REPLICATE$REPLICATEDELETE(OPOPERATION_ID) RETURNING_VALUES :opSQL;
        END ELSE IF (vOperationType = 'INSERT') THEN
        BEGIN
          EXECUTE PROCEDURE REPLICATE$REPLICATEINSERT(OPOPERATION_ID) RETURNING_VALUES :opSQL;
        END

        IF (opSQL IS NOT NULL) THEN
        BEGIN
          INSERT INTO REPLICATE$REQUIRED_SQL (ID, REQUIRED_SQL) VALUES(:opOPERATION_ID, :opSQL);
          
          SUSPEND;
          
          WHEN ANY DO
          BEGIN
           
          END
        END
    END ELSE
      SUSPEND;
  END
END^
SET TERM ; ^</value>
  </data>
  <metadata name="versionMaster407.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>21, 253</value>
  </metadata>
  <data name="versionMaster407.StringBlock" xml:space="preserve">
    <value>SET TERM ^ ;
ALTER PROCEDURE REPLICATE$OPERATIONLOG_INSERT (
    IPTABLE_NAME Varchar(31),
    IPOPERATION Varchar(6),
    IPPKEY1 Varchar(31),
    IPPKEY1_VALUE Varchar(24),
    IPPKEY2 Varchar(31),
    IPPKEY2_VALUE Varchar(24),
    IPPKEY3 Varchar(31),
    IPPKEY3_VALUE Varchar(24) )
RETURNS (
    OPNEWID Bigint )
AS
BEGIN 
  opNEWID = GEN_ID(REPLICATE$OPERATIONLOG_ID, 1);
  INSERT INTO REPLICATE$OPERATIONLOG (ID, DATETIME, TABLE_NAME, OPERATION, PKEY1, PKEY1_VALUE, PKEY2, PKEY2_VALUE, PKEY3, PKEY3_VALUE, REPLICATED, CLIENT_ADDRESS, USER_NAME, USER_ROLE)
  VALUES (:opNEWID, CURRENT_TIMESTAMP, :ipTABLE_NAME, :ipOPERATION, :ipPKEY1, :ipPKEY1_VALUE, :ipPKEY2, :ipPKEY2_VALUE, :ipPKEY3, :ipPKEY3_VALUE, COALESCE(rdb$get_context('USER_TRANSACTION', 'CLIENT_ID'), 0), rdb$get_context('SYSTEM', 'CLIENT_ADDRESS'), USER, CURRENT_ROLE); 
  SUSPEND;
END^
SET TERM ; ^
</value>
  </data>
  <metadata name="$this.TrayLargeIcon" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </metadata>
</root>